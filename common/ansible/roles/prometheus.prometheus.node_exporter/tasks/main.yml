---
- name: Preflight
  ansible.builtin.include_tasks:
    file: preflight.yml
  tags:
    - node_exporter_install
    - node_exporter_configure
    - node_exporter_run

- set_fact:
    _common_local_cache_path: "{{ node_exporter_local_cache_path }}"
    _common_binaries: "{{ _node_exporter_binaries }}"
    _common_binary_install_dir: "{{ node_exporter_binary_install_dir }}"
    _common_binary_url: "{{ node_exporter_binary_url }}"
    _common_checksums_url: "{{ node_exporter_checksums_url }}"
    _common_system_group: "{{ node_exporter_system_group }}"
    _common_system_user: "{{ node_exporter_system_user }}"
    _common_config_dir: "{{ node_exporter_config_dir }}"
    _common_binary_unarchive_opts: ['--strip-components=1']
    _common_selinux_port: "{{ node_exporter_web_listen_address | urlsplit('port') }}"
    _common_service_name: node_exporter
- set_fact:
    __common_binary_basename: "{{ _common_binary_url | urlsplit('path') | basename }}"
    __common_github_api_headers: "{{ {'GITHUB_TOKEN': lookup('ansible.builtin.env', 'GITHUB_TOKEN')} if (lookup('ansible.builtin.env', 'GITHUB_TOKEN')) else {} }}"
    # __common_parent_role_short_name: "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"

- name: "Gather system user and group facts"
  ansible.builtin.getent:
    database: "{{ item }}"
  loop:
    - passwd
    - group

- name: "Create system group {{ _common_system_group }}"
  ansible.builtin.group:
    name: "{{ _common_system_group }}"
    system: true
    state: present
  become: true
  when: _common_system_group not in ansible_facts.getent_group

- name: "Create system user {{ _common_system_user }}"
  ansible.builtin.user:
    name: "{{ _common_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ _common_system_group }}"
    home: "{{ _common_config_dir | default('/', true) }}"
    create_home: false
  become: true
  when: _common_system_user not in ansible_facts.getent_passwd

- name: "Download binary {{ __common_binary_basename }}"
  become: false
  delegate_to: localhost
  block:
    - name: "Create localhost binary cache path"
      ansible.builtin.file:
        path: "{{ _common_local_cache_path }}"
        state: directory
        mode: 0755
      check_mode: false

    - name: "Download {{ __common_binary_basename }}"
      ansible.builtin.uri:
        url: "{{ _common_binary_url }}"
        dest: "{{ _common_local_cache_path }}/{{ _common_binary_name | default(__common_binary_basename) }}"
        headers: "{{ __common_github_api_headers }}"
        mode: 0644
        status_code: [200, 203, 204, 206, 300, 301, 302, 303, 304, 307, 308]
        follow_redirects: all
      register: __common_download
      until: __common_download is succeeded
      retries: 5
      delay: 2
      # run_once: true  # <-- this can't be set due to multi-arch support
      check_mode: false

    - name: "Verify checksum of {{ __common_binary_basename }}"
      run_once: true
      check_mode: false
      when: _common_checksums_url is defined
      block:
        - name: "Fetch checksum list for {{ __common_binary_basename }}"
          ansible.builtin.uri:
            url: "{{ _common_checksums_url }}"
            headers: "{{ __common_github_api_headers }}"
            method: GET
            return_content: true
            status_code: [200, 203, 204, 206, 300, 301, 302, 303, 304, 307, 308]
            follow_redirects: all
          register: __common_binary_checksums_raw

        - name: "Parse checksum list for {{ __common_binary_basename }}"
          ansible.builtin.set_fact:
            __common_binary_checksums: "{{ dict(__common_binary_checksums_raw.content.splitlines()
                                        | map('regex_findall', '^([a-fA-F0-9]+)\\s+(.+)$') | map('flatten') | map('reverse')) }}"

        - name: "Calculate checksum of {{ __common_binary_basename }}"
          ansible.builtin.stat:
            path: "{{ _common_local_cache_path }}/{{ _common_binary_name | default(__common_binary_basename) }}"
            checksum_algorithm: sha256
            get_checksum: true
          register: __common_binary_checksum

        - name: "Verify correct checksum of {{ __common_binary_basename }}"
          ansible.builtin.assert:
            that: __common_binary_checksum.stat.checksum == __common_binary_checksums[__common_binary_basename]
            success_msg: "{{ __common_binary_basename }} checksum verified successfully"
            fail_msg: "{{ __common_binary_basename }} checksum mismatch"

    - name: "Unpack binary archive {{ __common_binary_basename }}"
      ansible.builtin.unarchive:
        src: "{{ _common_local_cache_path }}/{{ __common_binary_basename }}"
        dest: "{{ _common_local_cache_path }}"
        mode: 0755
        list_files: true
        extra_opts: "{{ _common_binary_unarchive_opts | default(omit, true) }}"
      check_mode: false
      throttle: 1  # see prometheus-community/ansible#457
      when: __common_binary_basename is search('\.zip$|\.tar\.gz$')

- name: "Check existence of binary install dir"
  ansible.builtin.stat:
    path: "{{ _common_binary_install_dir }}"
  register: __common_binary_install_dir

- name: "Make sure binary install dir exists"
  ansible.builtin.file:
    path: "{{ _common_binary_install_dir }}"
    mode: 0755
    owner: root
    group: root
  become: true
  when: not __common_binary_install_dir.stat.exists

- name: "Propagate binaries"
  ansible.builtin.copy:
    src: "{{ _common_local_cache_path }}/{{ item }}"
    dest: "{{ _common_binary_install_dir }}/{{ item }}"
    mode: 0755
    owner: root
    group: root
  loop: "{{ _common_binaries }}"
  become: true
  notify:
    - "Restart {{ _common_service_name }}"

- name: Install selinux python packages [RedHat]
  ansible.builtin.package:
    name: "{{ ['libselinux-python', 'policycoreutils-python']
           if ansible_facts['python_version'] is version('3', '<') else
           ['python3-libselinux', 'python3-policycoreutils'] }}"
    state: present
  register: __common_install_selinux_packages
  until: __common_install_selinux_packages is success
  retries: 5
  delay: 2
  become: true
  when: ansible_facts['os_family'] | lower == "redhat"

- name: Install selinux python packages [clearlinux]
  ansible.builtin.package:
    name: sysadmin-basic
    state: present
  register: __common_install_selinux_packages
  until: __common_install_selinux_packages is success
  retries: 5
  delay: 2
  become: true
  when:
    - ansible_distribution | lower == "clearlinux"

- name: Allow port in SELinux
  community.general.seport:
    ports: "{{ _common_selinux_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  become: true
  when:
    - ansible_version.full is version_compare('2.4', '>=')
    - ansible_selinux.status == "enabled"
    - (_common_selinux_port)

- name: Configure
  ansible.builtin.include_tasks:
    file: configure.yml
  tags:
    - node_exporter_configure

- name: Ensure Node Exporter is enabled on boot
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    name: node_exporter
    enabled: true
    state: started
  when:
    - not ansible_check_mode
  tags:
    - node_exporter_run
