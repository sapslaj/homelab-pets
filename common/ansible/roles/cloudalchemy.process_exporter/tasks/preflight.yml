---
- name: Fail on unsupported init systems
  fail:
    msg: "This module only works with systemd"
  when: ansible_service_mgr != 'systemd'

- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: Naive assertion of proper listen address
  assert:
    that:
      - "':' in process_exporter_web_listen_address"

- name: Check if process_exporter is installed
  stat:
    path: /usr/local/bin/process_exporter
  register: __process_exporter_is_installed
  check_mode: false
  tags:
    - process_exporter_install

- name: Gather currently installed process_exporter version (if any)
  command: /usr/local/bin/process_exporter --version
  args:
    warn: false
  changed_when: false
  register: __process_exporter_current_version_output
  check_mode: false
  when: __process_exporter_is_installed.stat.exists
  tags:
    - process_exporter_install
    - skip_ansible_lint

- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/ncabatoff/process-exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: true
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: "Set process_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        process_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when: process_exporter_version == "latest"
  delegate_to: localhost
  run_once: true

- name: Get checksum list from github
  set_fact:
    _checksums: "{{ lookup('url', 'https://github.com/ncabatoff/process-exporter/releases/download/v' + process_exporter_version + '/checksums.txt', wantlist=True) | list }}"
  run_once: true

- name: "Get checksum for {{ go_arch }} architecture"
  set_fact:
    process_exporter_checksum: "{{ item.split(' ')[0] }}"
  with_items: "{{ _checksums }}"
  when: "('linux-' + go_arch + '.tar.gz') in item"
