data_dir: /var/lib/vector
api:
  enabled: true
sources:
  logs_syslog:
    type: syslog
    address: 0.0.0.0:5144
    mode: tcp
    path: /var/lib/vector/syslog.sock

  logs_journald:
    type: journald

  metrics_internal:
    type: internal_metrics

  metrics_host:
    type: host_metrics
    scrape_interval_secs: 60

  metrics_node_exporter:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9100/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45

{% if vector_enable_dns %}
  metrics_adguard:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9617/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45

  metrics_coredns:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9153/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45
{% endif %}

{% if vector_enable_docker %}
  metrics_docker:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9323/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45

  metrics_cadvisor:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9338/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45

  metrics_watchtower:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9420/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45
    auth:
      strategy: bearer
      token: adminadmin
{% endif %}

{% if vector_enable_du %}
  metrics_du:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9477/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45
{% endif %}

{% if vector_enable_libvirt %}
  metrics_libvirt:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9177/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45
{% endif %}

{% if vector_enable_morbius %}
  metrics_morbius:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9269/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45
{% endif %}

{% if vector_enable_qbittorrent %}
  metrics_qbittorrent:
    type: prometheus_scrape
    endpoints:
      - http://localhost:9365/metrics
    scrape_interval_secs: 60
    scrape_timeout_secs: 45
{% endif %}

transforms:
  logs_syslog_default_labels:
    type: remap
    inputs:
      - logs_*
    source: |
      .job = "host_vector/logs_syslog"
      .hostname = get_hostname!()

  logs_journald_default_labels:
    type: remap
    inputs:
      - logs_journald
    source: |
      .job = "host_vector/logs_journald"
      .hostname = get_hostname!()

  metrics_internal_default_labels:
    type: remap
    inputs:
      - metrics_internal
    source: |
      .tags.job = "host_vector/metrics_internal"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }

  metrics_host_default_labels:
    type: remap
    inputs:
      - metrics_host
    source: |
      .tags.job = "host_vector/metrics_host"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }

  metrics_node_exporter_default_labels:
    type: remap
    inputs:
      - metrics_node_exporter
    source: |
      .tags.job = "host_vector/metrics_node_exporter"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }

{% if vector_enable_dns %}
  metrics_adguard_default_labels:
    type: remap
    inputs:
      - metrics_adguard
    source: |
      .tags.job = "host_vector/metrics_adguard"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }

  metrics_coredns_default_labels:
    type: remap
    inputs:
      - metrics_coredns
    source: |
      .tags.job = "host_vector/metrics_coredns"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }
{% endif %}

{% if vector_enable_docker %}
  metrics_docker_default_labels:
    type: remap
    inputs:
      - metrics_docker
    source: |
      .tags.job = "host_vector/metrics_docker"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }

  metrics_cadvisor_default_labels:
    type: remap
    inputs:
      - metrics_cadvisor
    source: |
      .tags.job = "host_vector/metrics_cadvisor"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }

  metrics_watchtower_default_labels:
    type: remap
    inputs:
      - metrics_watchtower
    source: |
      .tags.job = "host_vector/metrics_watchtower"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }
{% endif %}

{% if vector_enable_du %}
  metrics_du_default_labels:
    type: remap
    inputs:
      - metrics_du
    source: |
      .tags.job = "host_vector/metrics_du"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }
{% endif %}

{% if vector_enable_libvirt %}
  metrics_libvirt_default_labels:
    type: remap
    inputs:
      - metrics_libvirt
    source: |
      .tags.job = "host_vector/metrics_libvirt"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }
{% endif %}

{% if vector_enable_morbius %}
  metrics_morbius_default_labels:
    type: remap
    inputs:
      - metrics_morbius
    source: |
      .tags.job = "host_vector/metrics_morbius"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }
{% endif %}

{% if vector_enable_qbittorrent %}
  metrics_qbittorrent_default_labels:
    type: remap
    inputs:
      - metrics_qbittorrent
    source: |
      .tags.job = "host_vector/metrics_qbittorrent"
      .tags.hostname = get_hostname!()
      if .tags.instance == null {
        .tags.instance = .tags.hostname
      }
{% endif %}

sinks:
  victorialogs:
    type: elasticsearch
    api_version: v8
    compression: gzip
    endpoints:
      - https://victoriametrics-vlinsert.sapslaj.xyz/insert/elasticsearch
    healthcheck:
      enabled: false
    inputs:
      - logs_syslog_default_labels
      - logs_journald_default_labels
    mode: bulk
    request:
      headers:
        Authorization: ${REMOTE_WRITE_AUTHORIZATION_HEADER?}
        AccountID: "0"
        ProjectID: "0"
        VL-Msg-Field: message,msg,_msg,log.msg,log.message,log
        VL-Stream-Fields: stream,hostname
        VL-Time-Field: timestamp

  victoriametrics:
    type: prometheus_remote_write
    inputs:
      - metrics_internal_default_labels
      - metrics_host_default_labels
      - metrics_node_exporter_default_labels

{% if vector_enable_dns %}
      - metrics_adguard
      - metrics_coredns
{% endif %}

{% if vector_enable_docker %}
      - metrics_docker_default_labels
      - metrics_cadvisor_default_labels
      - metrics_watchtower_default_labels
{% endif %}

{% if vector_enable_du %}
      - metrics_du
{% endif %}

{% if vector_enable_libvirt %}
      - metrics_libvirt_default_labels
{% endif %}

{% if vector_enable_morbius %}
      - metrics_morbius
{% endif %}

{% if vector_enable_qbittorrent %}
      - metrics_qbittorrent_default_labels
{% endif %}

    endpoint: https://victoriametrics-vminsert.sapslaj.xyz/insert/0/prometheus/api/v1/write
    compression: zstd
    auth:
      strategy: basic
      user: ${REMOTE_WRITE_USERNAME?}
      password: ${REMOTE_WRITE_PASSWORD?}
    healthcheck:
      enabled: false

  internal_metrics_prometheus_exporter:
    type: prometheus_exporter
    inputs:
      - metrics_internal
    address: 0.0.0.0:9598
